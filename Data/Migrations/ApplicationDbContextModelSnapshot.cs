// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.CartLine", b =>
                {
                    b.Property<int>("CartLineID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderId");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("CartLineID");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartLine");
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<bool>("GiftWrap");

                    b.Property<string>("Line1")
                        .IsRequired();

                    b.Property<string>("Line2");

                    b.Property<string>("Line3");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("Shipped");

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<string>("Zip");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new { ProductId = 10, Category = "Watersports", Description = "A boat for one person", Name = "Kayak", Price = 275m },
                        new { ProductId = 11, Category = "Watersports", Description = "Protective and fashionable", Name = "Lifejacket", Price = 48.95m },
                        new { ProductId = 12, Category = "Soccer", Description = "FIFA-approved size and weight", Name = "Soccer Ball", Price = 19.50m },
                        new { ProductId = 13, Category = "Soccer", Description = "Give your playing field a professional touch", Name = "Corner Flags", Price = 34.95m },
                        new { ProductId = 14, Category = "Soccer", Description = "Flat-packed 35,000-seat stadium", Name = "Stadium", Price = 79500m },
                        new { ProductId = 15, Category = "Chess", Description = "Improve brain efficiency by 75%", Name = "Thinking Cap", Price = 16m },
                        new { ProductId = 16, Category = "Chess", Description = "Secretly give your opponent a disadvantage", Name = "Unsteady Chair", Price = 29.95m },
                        new { ProductId = 17, Category = "Chess", Description = "A fun game for the family", Name = "Human Chess Board", Price = 75m },
                        new { ProductId = 18, Category = "Chess", Description = "Gold-plated, diamond-studded King", Name = "Bling-Bling King", Price = 1200m }
                    );
                });

            modelBuilder.Entity("Data.Entities.CartLine", b =>
                {
                    b.HasOne("Data.Entities.Order")
                        .WithMany("Lines")
                        .HasForeignKey("OrderId");

                    b.HasOne("Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
